const os = require('os');
const test = require('tape');
const makeArgs = require('./make-build-args');

test('no config results in basic build args', t => {
  t.plan(1);
  t.equal(makeArgs().join(' '), './');
});

test('file and tags', t => {
  t.plan(1);
  t.equal(makeArgs({
    file: './Dockerfile',
    tag: ['foo']
  }).join(' '), '--file ./Dockerfile --tag foo ./');
});

test('context', t => {
  t.plan(1);
  t.equal(makeArgs({
    context: './foo'
  }).join(' '), './foo');
});

test('context expands ~', t => {
  t.plan(1);
  t.equal(makeArgs({
    context: '~/foo'
  }).join(' '), `${ os.homedir() }/foo`);
});

test('file expands ~', t => {
  t.plan(1);
  t.equal(makeArgs({
    file: '~/DAT-FILE'
  }).join(' '), `--file ${ os.homedir() }/DAT-FILE ./`);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9oYW5kbGVyL2J1aWxkL21ha2UtYnVpbGQtYXJncy50ZXN0LmpzIl0sIm5hbWVzIjpbIm9zIiwicmVxdWlyZSIsInRlc3QiLCJtYWtlQXJncyIsInQiLCJwbGFuIiwiZXF1YWwiLCJqb2luIiwiZmlsZSIsInRhZyIsImNvbnRleHQiLCJob21lZGlyIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxLQUFLQyxRQUFRLElBQVIsQ0FBWDtBQUNBLE1BQU1DLE9BQU9ELFFBQVEsTUFBUixDQUFiO0FBQ0EsTUFBTUUsV0FBV0YsUUFBUSxtQkFBUixDQUFqQjs7QUFFQUMsS0FBSyx1Q0FBTCxFQUE4Q0UsS0FBSztBQUNqREEsSUFBRUMsSUFBRixDQUFPLENBQVA7QUFDQUQsSUFBRUUsS0FBRixDQUNFSCxXQUFXSSxJQUFYLENBQWdCLEdBQWhCLENBREYsRUFFRSxJQUZGO0FBSUQsQ0FORDs7QUFRQUwsS0FBSyxlQUFMLEVBQXNCRSxLQUFLO0FBQ3pCQSxJQUFFQyxJQUFGLENBQU8sQ0FBUDtBQUNBRCxJQUFFRSxLQUFGLENBQ0VILFNBQVM7QUFDUEssVUFBTSxjQURDO0FBRVBDLFNBQUssQ0FBQyxLQUFEO0FBRkUsR0FBVCxFQUdHRixJQUhILENBR1EsR0FIUixDQURGLEVBS0Usa0NBTEY7QUFPRCxDQVREOztBQVdBTCxLQUFLLFNBQUwsRUFBZ0JFLEtBQUs7QUFDbkJBLElBQUVDLElBQUYsQ0FBTyxDQUFQO0FBQ0FELElBQUVFLEtBQUYsQ0FDRUgsU0FBUztBQUNQTyxhQUFTO0FBREYsR0FBVCxFQUVHSCxJQUZILENBRVEsR0FGUixDQURGLEVBSUUsT0FKRjtBQU1ELENBUkQ7O0FBVUFMLEtBQUssbUJBQUwsRUFBMEJFLEtBQUs7QUFDN0JBLElBQUVDLElBQUYsQ0FBTyxDQUFQO0FBQ0FELElBQUVFLEtBQUYsQ0FDRUgsU0FBUztBQUNQTyxhQUFTO0FBREYsR0FBVCxFQUVHSCxJQUZILENBRVEsR0FGUixDQURGLEVBSUcsSUFBRVAsR0FBR1csT0FBSCxFQUFhLE9BSmxCO0FBTUQsQ0FSRDs7QUFVQVQsS0FBSyxnQkFBTCxFQUF1QkUsS0FBSztBQUMxQkEsSUFBRUMsSUFBRixDQUFPLENBQVA7QUFDQUQsSUFBRUUsS0FBRixDQUNFSCxTQUFTO0FBQ1BLLFVBQU07QUFEQyxHQUFULEVBRUdELElBRkgsQ0FFUSxHQUZSLENBREYsRUFJRyxXQUFTUCxHQUFHVyxPQUFILEVBQWEsZUFKekI7QUFNRCxDQVJEIiwiZmlsZSI6Im1ha2UtYnVpbGQtYXJncy50ZXN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgb3MgPSByZXF1aXJlKCdvcycpXG5jb25zdCB0ZXN0ID0gcmVxdWlyZSgndGFwZScpXG5jb25zdCBtYWtlQXJncyA9IHJlcXVpcmUoJy4vbWFrZS1idWlsZC1hcmdzJylcblxudGVzdCgnbm8gY29uZmlnIHJlc3VsdHMgaW4gYmFzaWMgYnVpbGQgYXJncycsIHQgPT4ge1xuICB0LnBsYW4oMSlcbiAgdC5lcXVhbChcbiAgICBtYWtlQXJncygpLmpvaW4oJyAnKSxcbiAgICAnLi8nXG4gIClcbn0pXG5cbnRlc3QoJ2ZpbGUgYW5kIHRhZ3MnLCB0ID0+IHtcbiAgdC5wbGFuKDEpXG4gIHQuZXF1YWwoXG4gICAgbWFrZUFyZ3Moe1xuICAgICAgZmlsZTogJy4vRG9ja2VyZmlsZScsXG4gICAgICB0YWc6IFsnZm9vJ11cbiAgICB9KS5qb2luKCcgJyksXG4gICAgJy0tZmlsZSAuL0RvY2tlcmZpbGUgLS10YWcgZm9vIC4vJ1xuICApXG59KVxuXG50ZXN0KCdjb250ZXh0JywgdCA9PiB7XG4gIHQucGxhbigxKVxuICB0LmVxdWFsKFxuICAgIG1ha2VBcmdzKHtcbiAgICAgIGNvbnRleHQ6ICcuL2ZvbydcbiAgICB9KS5qb2luKCcgJyksXG4gICAgJy4vZm9vJ1xuICApXG59KVxuXG50ZXN0KCdjb250ZXh0IGV4cGFuZHMgficsIHQgPT4ge1xuICB0LnBsYW4oMSlcbiAgdC5lcXVhbChcbiAgICBtYWtlQXJncyh7XG4gICAgICBjb250ZXh0OiAnfi9mb28nXG4gICAgfSkuam9pbignICcpLFxuICAgIGAke29zLmhvbWVkaXIoKX0vZm9vYFxuICApXG59KVxuXG50ZXN0KCdmaWxlIGV4cGFuZHMgficsIHQgPT4ge1xuICB0LnBsYW4oMSlcbiAgdC5lcXVhbChcbiAgICBtYWtlQXJncyh7XG4gICAgICBmaWxlOiAnfi9EQVQtRklMRSdcbiAgICB9KS5qb2luKCcgJyksXG4gICAgYC0tZmlsZSAke29zLmhvbWVkaXIoKX0vREFULUZJTEUgLi9gXG4gIClcbn0pXG4iXX0=