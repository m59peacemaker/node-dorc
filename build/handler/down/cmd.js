const R = require('ramda');
const down = require('./');
const minimist = require('minimist');
const pickIfAnySpecified = require('../../lib/pick-if-any-specified');

const parse = (args, options) => {
  return { services: minimist(args)._ };
};

const handler = (services, config, args = {}) => {
  return R.pipe(_ => pickIfAnySpecified(args.services, _), R.map(service => down(service).catch(() => {})), R.values, _ => Promise.all(_))(services);
};

module.exports = {
  usage: 'down [services...]',
  description: 'stop and remove service container(s)',
  parse,
  handler
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9oYW5kbGVyL2Rvd24vY21kLmpzIl0sIm5hbWVzIjpbIlIiLCJyZXF1aXJlIiwiZG93biIsIm1pbmltaXN0IiwicGlja0lmQW55U3BlY2lmaWVkIiwicGFyc2UiLCJhcmdzIiwib3B0aW9ucyIsInNlcnZpY2VzIiwiXyIsImhhbmRsZXIiLCJjb25maWciLCJwaXBlIiwibWFwIiwic2VydmljZSIsImNhdGNoIiwidmFsdWVzIiwiUHJvbWlzZSIsImFsbCIsIm1vZHVsZSIsImV4cG9ydHMiLCJ1c2FnZSIsImRlc2NyaXB0aW9uIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxJQUFJQyxRQUFRLE9BQVIsQ0FBVjtBQUNBLE1BQU1DLE9BQU9ELFFBQVEsSUFBUixDQUFiO0FBQ0EsTUFBTUUsV0FBV0YsUUFBUSxVQUFSLENBQWpCO0FBQ0EsTUFBTUcscUJBQXFCSCxRQUFRLGlDQUFSLENBQTNCOztBQUVBLE1BQU1JLFFBQVEsQ0FBQ0MsSUFBRCxFQUFPQyxPQUFQLEtBQW1CO0FBQy9CLFNBQU8sRUFBQ0MsVUFBVUwsU0FBU0csSUFBVCxFQUFlRyxDQUExQixFQUFQO0FBQ0QsQ0FGRDs7QUFJQSxNQUFNQyxVQUFVLENBQUNGLFFBQUQsRUFBV0csTUFBWCxFQUFtQkwsT0FBTyxFQUExQixLQUFpQztBQUMvQyxTQUFPTixFQUFFWSxJQUFGLENBQ0xILEtBQUtMLG1CQUFtQkUsS0FBS0UsUUFBeEIsRUFBa0NDLENBQWxDLENBREEsRUFFTFQsRUFBRWEsR0FBRixDQUFNQyxXQUFXWixLQUFLWSxPQUFMLEVBQWNDLEtBQWQsQ0FBb0IsTUFBTSxDQUFFLENBQTVCLENBQWpCLENBRkssRUFHTGYsRUFBRWdCLE1BSEcsRUFJTFAsS0FBS1EsUUFBUUMsR0FBUixDQUFZVCxDQUFaLENBSkEsRUFLTEQsUUFMSyxDQUFQO0FBTUQsQ0FQRDs7QUFTQVcsT0FBT0MsT0FBUCxHQUFpQjtBQUNmQyxTQUFPLG9CQURRO0FBRWZDLGVBQWEsc0NBRkU7QUFHZmpCLE9BSGU7QUFJZks7QUFKZSxDQUFqQiIsImZpbGUiOiJjbWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBSID0gcmVxdWlyZSgncmFtZGEnKVxuY29uc3QgZG93biA9IHJlcXVpcmUoJy4vJylcbmNvbnN0IG1pbmltaXN0ID0gcmVxdWlyZSgnbWluaW1pc3QnKVxuY29uc3QgcGlja0lmQW55U3BlY2lmaWVkID0gcmVxdWlyZSgnfi9saWIvcGljay1pZi1hbnktc3BlY2lmaWVkJylcblxuY29uc3QgcGFyc2UgPSAoYXJncywgb3B0aW9ucykgPT4ge1xuICByZXR1cm4ge3NlcnZpY2VzOiBtaW5pbWlzdChhcmdzKS5ffVxufVxuXG5jb25zdCBoYW5kbGVyID0gKHNlcnZpY2VzLCBjb25maWcsIGFyZ3MgPSB7fSkgPT4ge1xuICByZXR1cm4gUi5waXBlKFxuICAgIF8gPT4gcGlja0lmQW55U3BlY2lmaWVkKGFyZ3Muc2VydmljZXMsIF8pLFxuICAgIFIubWFwKHNlcnZpY2UgPT4gZG93bihzZXJ2aWNlKS5jYXRjaCgoKSA9PiB7fSkpLFxuICAgIFIudmFsdWVzLFxuICAgIF8gPT4gUHJvbWlzZS5hbGwoXylcbiAgKShzZXJ2aWNlcylcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHVzYWdlOiAnZG93biBbc2VydmljZXMuLi5dJyxcbiAgZGVzY3JpcHRpb246ICdzdG9wIGFuZCByZW1vdmUgc2VydmljZSBjb250YWluZXIocyknLFxuICBwYXJzZSxcbiAgaGFuZGxlclxufVxuIl19