const R = require('ramda');
const follow = require('./');
const minimist = require('minimist');
const pickIfAnySpecified = require('../../lib/pick-if-any-specified');

const parse = (args, options) => {
  return { services: minimist(args)._ };
};

const handler = (services, config, args = {}) => {
  return R.pipe(_ => pickIfAnySpecified(args.services, _), R.map(service => follow(service, args)), R.values, _ => Promise.all(_))(services);
};

module.exports = {
  usage: 'follow [docker log options...] [services...]',
  description: 'shortcut for "dorc logs --follow"',
  parse,
  handler
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9oYW5kbGVyL2ZvbGxvdy9jbWQuanMiXSwibmFtZXMiOlsiUiIsInJlcXVpcmUiLCJmb2xsb3ciLCJtaW5pbWlzdCIsInBpY2tJZkFueVNwZWNpZmllZCIsInBhcnNlIiwiYXJncyIsIm9wdGlvbnMiLCJzZXJ2aWNlcyIsIl8iLCJoYW5kbGVyIiwiY29uZmlnIiwicGlwZSIsIm1hcCIsInNlcnZpY2UiLCJ2YWx1ZXMiLCJQcm9taXNlIiwiYWxsIiwibW9kdWxlIiwiZXhwb3J0cyIsInVzYWdlIiwiZGVzY3JpcHRpb24iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUlDLFFBQVEsT0FBUixDQUFWO0FBQ0EsTUFBTUMsU0FBU0QsUUFBUSxJQUFSLENBQWY7QUFDQSxNQUFNRSxXQUFXRixRQUFRLFVBQVIsQ0FBakI7QUFDQSxNQUFNRyxxQkFBcUJILFFBQVEsaUNBQVIsQ0FBM0I7O0FBRUEsTUFBTUksUUFBUSxDQUFDQyxJQUFELEVBQU9DLE9BQVAsS0FBbUI7QUFDL0IsU0FBTyxFQUFDQyxVQUFVTCxTQUFTRyxJQUFULEVBQWVHLENBQTFCLEVBQVA7QUFDRCxDQUZEOztBQUlBLE1BQU1DLFVBQVUsQ0FBQ0YsUUFBRCxFQUFXRyxNQUFYLEVBQW1CTCxPQUFPLEVBQTFCLEtBQWlDO0FBQy9DLFNBQU9OLEVBQUVZLElBQUYsQ0FDTEgsS0FBS0wsbUJBQW1CRSxLQUFLRSxRQUF4QixFQUFrQ0MsQ0FBbEMsQ0FEQSxFQUVMVCxFQUFFYSxHQUFGLENBQU1DLFdBQVdaLE9BQU9ZLE9BQVAsRUFBZ0JSLElBQWhCLENBQWpCLENBRkssRUFHTE4sRUFBRWUsTUFIRyxFQUlMTixLQUFLTyxRQUFRQyxHQUFSLENBQVlSLENBQVosQ0FKQSxFQUtMRCxRQUxLLENBQVA7QUFNRCxDQVBEOztBQVNBVSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2ZDLFNBQU8sOENBRFE7QUFFZkMsZUFBYSxtQ0FGRTtBQUdmaEIsT0FIZTtBQUlmSztBQUplLENBQWpCIiwiZmlsZSI6ImNtZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFIgPSByZXF1aXJlKCdyYW1kYScpXG5jb25zdCBmb2xsb3cgPSByZXF1aXJlKCcuLycpXG5jb25zdCBtaW5pbWlzdCA9IHJlcXVpcmUoJ21pbmltaXN0JylcbmNvbnN0IHBpY2tJZkFueVNwZWNpZmllZCA9IHJlcXVpcmUoJ34vbGliL3BpY2staWYtYW55LXNwZWNpZmllZCcpXG5cbmNvbnN0IHBhcnNlID0gKGFyZ3MsIG9wdGlvbnMpID0+IHtcbiAgcmV0dXJuIHtzZXJ2aWNlczogbWluaW1pc3QoYXJncykuX31cbn1cblxuY29uc3QgaGFuZGxlciA9IChzZXJ2aWNlcywgY29uZmlnLCBhcmdzID0ge30pID0+IHtcbiAgcmV0dXJuIFIucGlwZShcbiAgICBfID0+IHBpY2tJZkFueVNwZWNpZmllZChhcmdzLnNlcnZpY2VzLCBfKSxcbiAgICBSLm1hcChzZXJ2aWNlID0+IGZvbGxvdyhzZXJ2aWNlLCBhcmdzKSksXG4gICAgUi52YWx1ZXMsXG4gICAgXyA9PiBQcm9taXNlLmFsbChfKVxuICApKHNlcnZpY2VzKVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgdXNhZ2U6ICdmb2xsb3cgW2RvY2tlciBsb2cgb3B0aW9ucy4uLl0gW3NlcnZpY2VzLi4uXScsXG4gIGRlc2NyaXB0aW9uOiAnc2hvcnRjdXQgZm9yIFwiZG9yYyBsb2dzIC0tZm9sbG93XCInLFxuICBwYXJzZSxcbiAgaGFuZGxlclxufVxuIl19