const Joi = require('joi');
const stringOrNumber = Joi.alternatives().try(Joi.string(), Joi.number());
const arrayOfStrings = Joi.array().items(Joi.string());

const looseObject = Joi.object({
  tag: [Joi.string(), arrayOfStrings],
  file: Joi.string(),
  args: Joi.object().pattern(/.+/, stringOrNumber),
  context: Joi.string()
}).requiredKeys('tag', 'file');

const strictObject = Joi.object({
  tag: arrayOfStrings,
  file: Joi.string(),
  args: Joi.object().pattern(/.+/, stringOrNumber),
  context: Joi.string()
}).requiredKeys('tag', 'file');

const loose = Joi.alternatives().try(Joi.string(), looseObject, Joi.array().items(looseObject));

const strict = Joi.alternatives().try(Joi.string(), Joi.array().items(strictObject));

module.exports = {
  loose,
  strict
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zY2hlbWEvc2VydmljZS9pbWFnZS5qcyJdLCJuYW1lcyI6WyJKb2kiLCJyZXF1aXJlIiwic3RyaW5nT3JOdW1iZXIiLCJhbHRlcm5hdGl2ZXMiLCJ0cnkiLCJzdHJpbmciLCJudW1iZXIiLCJhcnJheU9mU3RyaW5ncyIsImFycmF5IiwiaXRlbXMiLCJsb29zZU9iamVjdCIsIm9iamVjdCIsInRhZyIsImZpbGUiLCJhcmdzIiwicGF0dGVybiIsImNvbnRleHQiLCJyZXF1aXJlZEtleXMiLCJzdHJpY3RPYmplY3QiLCJsb29zZSIsInN0cmljdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE1BQU1DLFFBQVEsS0FBUixDQUFaO0FBQ0EsTUFBTUMsaUJBQWlCRixJQUFJRyxZQUFKLEdBQW1CQyxHQUFuQixDQUF1QkosSUFBSUssTUFBSixFQUF2QixFQUFxQ0wsSUFBSU0sTUFBSixFQUFyQyxDQUF2QjtBQUNBLE1BQU1DLGlCQUFpQlAsSUFBSVEsS0FBSixHQUFZQyxLQUFaLENBQWtCVCxJQUFJSyxNQUFKLEVBQWxCLENBQXZCOztBQUVBLE1BQU1LLGNBQWNWLElBQ2pCVyxNQURpQixDQUNWO0FBQ05DLE9BQUssQ0FBQ1osSUFBSUssTUFBSixFQUFELEVBQWVFLGNBQWYsQ0FEQztBQUVOTSxRQUFNYixJQUFJSyxNQUFKLEVBRkE7QUFHTlMsUUFBTWQsSUFBSVcsTUFBSixHQUFhSSxPQUFiLENBQXFCLElBQXJCLEVBQTJCYixjQUEzQixDQUhBO0FBSU5jLFdBQVNoQixJQUFJSyxNQUFKO0FBSkgsQ0FEVSxFQU9qQlksWUFQaUIsQ0FPSixLQVBJLEVBT0csTUFQSCxDQUFwQjs7QUFTQSxNQUFNQyxlQUFlbEIsSUFDbEJXLE1BRGtCLENBQ1g7QUFDTkMsT0FBS0wsY0FEQztBQUVOTSxRQUFNYixJQUFJSyxNQUFKLEVBRkE7QUFHTlMsUUFBTWQsSUFBSVcsTUFBSixHQUFhSSxPQUFiLENBQXFCLElBQXJCLEVBQTJCYixjQUEzQixDQUhBO0FBSU5jLFdBQVNoQixJQUFJSyxNQUFKO0FBSkgsQ0FEVyxFQU9sQlksWUFQa0IsQ0FPTCxLQVBLLEVBT0UsTUFQRixDQUFyQjs7QUFTQSxNQUFNRSxRQUFRbkIsSUFBSUcsWUFBSixHQUFtQkMsR0FBbkIsQ0FDWkosSUFBSUssTUFBSixFQURZLEVBRVpLLFdBRlksRUFHWlYsSUFBSVEsS0FBSixHQUFZQyxLQUFaLENBQWtCQyxXQUFsQixDQUhZLENBQWQ7O0FBTUEsTUFBTVUsU0FBU3BCLElBQUlHLFlBQUosR0FBbUJDLEdBQW5CLENBQ2JKLElBQUlLLE1BQUosRUFEYSxFQUViTCxJQUFJUSxLQUFKLEdBQVlDLEtBQVosQ0FBa0JTLFlBQWxCLENBRmEsQ0FBZjs7QUFLQUcsT0FBT0MsT0FBUCxHQUFpQjtBQUNmSCxPQURlO0FBRWZDO0FBRmUsQ0FBakIiLCJmaWxlIjoiaW1hZ2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBKb2kgPSByZXF1aXJlKCdqb2knKVxuY29uc3Qgc3RyaW5nT3JOdW1iZXIgPSBKb2kuYWx0ZXJuYXRpdmVzKCkudHJ5KEpvaS5zdHJpbmcoKSwgSm9pLm51bWJlcigpKVxuY29uc3QgYXJyYXlPZlN0cmluZ3MgPSBKb2kuYXJyYXkoKS5pdGVtcyhKb2kuc3RyaW5nKCkpXG5cbmNvbnN0IGxvb3NlT2JqZWN0ID0gSm9pXG4gIC5vYmplY3Qoe1xuICAgIHRhZzogW0pvaS5zdHJpbmcoKSwgYXJyYXlPZlN0cmluZ3NdLFxuICAgIGZpbGU6IEpvaS5zdHJpbmcoKSxcbiAgICBhcmdzOiBKb2kub2JqZWN0KCkucGF0dGVybigvLisvLCBzdHJpbmdPck51bWJlciksXG4gICAgY29udGV4dDogSm9pLnN0cmluZygpXG4gIH0pXG4gIC5yZXF1aXJlZEtleXMoJ3RhZycsICdmaWxlJylcblxuY29uc3Qgc3RyaWN0T2JqZWN0ID0gSm9pXG4gIC5vYmplY3Qoe1xuICAgIHRhZzogYXJyYXlPZlN0cmluZ3MsXG4gICAgZmlsZTogSm9pLnN0cmluZygpLFxuICAgIGFyZ3M6IEpvaS5vYmplY3QoKS5wYXR0ZXJuKC8uKy8sIHN0cmluZ09yTnVtYmVyKSxcbiAgICBjb250ZXh0OiBKb2kuc3RyaW5nKClcbiAgfSlcbiAgLnJlcXVpcmVkS2V5cygndGFnJywgJ2ZpbGUnKVxuXG5jb25zdCBsb29zZSA9IEpvaS5hbHRlcm5hdGl2ZXMoKS50cnkoXG4gIEpvaS5zdHJpbmcoKSxcbiAgbG9vc2VPYmplY3QsXG4gIEpvaS5hcnJheSgpLml0ZW1zKGxvb3NlT2JqZWN0KVxuKVxuXG5jb25zdCBzdHJpY3QgPSBKb2kuYWx0ZXJuYXRpdmVzKCkudHJ5KFxuICBKb2kuc3RyaW5nKCksXG4gIEpvaS5hcnJheSgpLml0ZW1zKHN0cmljdE9iamVjdClcbilcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGxvb3NlLFxuICBzdHJpY3Rcbn1cbiJdfQ==