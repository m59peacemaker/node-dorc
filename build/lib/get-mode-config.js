const R = require('ramda');

var _require = require('deepmerge');

const merge = _require.all;


const collapseObjToMode = (mode, obj) => {
  return merge([{}, R.dissoc('mode', obj), R.defaultTo({}, R.view(R.lensPath(['mode', mode]), obj))]);
};

const collapsers = {
  global: collapseObjToMode,
  services: (mode, obj) => R.map(v => collapseObjToMode(mode, v), obj)
};

const getModeConfig = (mode, config) => R.mapObjIndexed((value, key) => {
  const fn = R.view(R.lensProp(key), collapsers);
  return fn ? fn(mode, value) : value;
}, config);

module.exports = getModeConfig;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWIvZ2V0LW1vZGUtY29uZmlnLmpzIl0sIm5hbWVzIjpbIlIiLCJyZXF1aXJlIiwibWVyZ2UiLCJhbGwiLCJjb2xsYXBzZU9ialRvTW9kZSIsIm1vZGUiLCJvYmoiLCJkaXNzb2MiLCJkZWZhdWx0VG8iLCJ2aWV3IiwibGVuc1BhdGgiLCJjb2xsYXBzZXJzIiwiZ2xvYmFsIiwic2VydmljZXMiLCJtYXAiLCJ2IiwiZ2V0TW9kZUNvbmZpZyIsImNvbmZpZyIsIm1hcE9iakluZGV4ZWQiLCJ2YWx1ZSIsImtleSIsImZuIiwibGVuc1Byb3AiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxJQUFJQyxRQUFRLE9BQVIsQ0FBVjs7ZUFDcUJBLFFBQVEsV0FBUixDOztNQUFUQyxLLFlBQUxDLEc7OztBQUVQLE1BQU1DLG9CQUFvQixDQUFDQyxJQUFELEVBQU9DLEdBQVAsS0FBZTtBQUN2QyxTQUFPSixNQUFNLENBQ1gsRUFEVyxFQUVYRixFQUFFTyxNQUFGLENBQVMsTUFBVCxFQUFpQkQsR0FBakIsQ0FGVyxFQUdYTixFQUFFUSxTQUFGLENBQVksRUFBWixFQUFnQlIsRUFBRVMsSUFBRixDQUFPVCxFQUFFVSxRQUFGLENBQVcsQ0FBQyxNQUFELEVBQVNMLElBQVQsQ0FBWCxDQUFQLEVBQW1DQyxHQUFuQyxDQUFoQixDQUhXLENBQU4sQ0FBUDtBQUtELENBTkQ7O0FBUUEsTUFBTUssYUFBYTtBQUNqQkMsVUFBUVIsaUJBRFM7QUFFakJTLFlBQVUsQ0FBQ1IsSUFBRCxFQUFPQyxHQUFQLEtBQWVOLEVBQUVjLEdBQUYsQ0FBTUMsS0FBS1gsa0JBQWtCQyxJQUFsQixFQUF3QlUsQ0FBeEIsQ0FBWCxFQUF1Q1QsR0FBdkM7QUFGUixDQUFuQjs7QUFLQSxNQUFNVSxnQkFBZ0IsQ0FBQ1gsSUFBRCxFQUFPWSxNQUFQLEtBQWtCakIsRUFBRWtCLGFBQUYsQ0FDdEMsQ0FBQ0MsS0FBRCxFQUFRQyxHQUFSLEtBQWdCO0FBQ2QsUUFBTUMsS0FBS3JCLEVBQUVTLElBQUYsQ0FBT1QsRUFBRXNCLFFBQUYsQ0FBV0YsR0FBWCxDQUFQLEVBQXdCVCxVQUF4QixDQUFYO0FBQ0EsU0FBT1UsS0FBS0EsR0FBR2hCLElBQUgsRUFBU2MsS0FBVCxDQUFMLEdBQXVCQSxLQUE5QjtBQUNELENBSnFDLEVBS3RDRixNQUxzQyxDQUF4Qzs7QUFRQU0sT0FBT0MsT0FBUCxHQUFpQlIsYUFBakIiLCJmaWxlIjoiZ2V0LW1vZGUtY29uZmlnLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUiA9IHJlcXVpcmUoJ3JhbWRhJylcbmNvbnN0IHthbGw6IG1lcmdlfSA9IHJlcXVpcmUoJ2RlZXBtZXJnZScpXG5cbmNvbnN0IGNvbGxhcHNlT2JqVG9Nb2RlID0gKG1vZGUsIG9iaikgPT4ge1xuICByZXR1cm4gbWVyZ2UoW1xuICAgIHt9LFxuICAgIFIuZGlzc29jKCdtb2RlJywgb2JqKSxcbiAgICBSLmRlZmF1bHRUbyh7fSwgUi52aWV3KFIubGVuc1BhdGgoWydtb2RlJywgbW9kZV0pLCBvYmopKVxuICBdKVxufVxuXG5jb25zdCBjb2xsYXBzZXJzID0ge1xuICBnbG9iYWw6IGNvbGxhcHNlT2JqVG9Nb2RlLFxuICBzZXJ2aWNlczogKG1vZGUsIG9iaikgPT4gUi5tYXAodiA9PiBjb2xsYXBzZU9ialRvTW9kZShtb2RlLCB2KSwgb2JqKVxufVxuXG5jb25zdCBnZXRNb2RlQ29uZmlnID0gKG1vZGUsIGNvbmZpZykgPT4gUi5tYXBPYmpJbmRleGVkKFxuICAodmFsdWUsIGtleSkgPT4ge1xuICAgIGNvbnN0IGZuID0gUi52aWV3KFIubGVuc1Byb3Aoa2V5KSwgY29sbGFwc2VycylcbiAgICByZXR1cm4gZm4gPyBmbihtb2RlLCB2YWx1ZSkgOiB2YWx1ZVxuICB9LFxuICBjb25maWdcbilcblxubW9kdWxlLmV4cG9ydHMgPSBnZXRNb2RlQ29uZmlnXG4iXX0=