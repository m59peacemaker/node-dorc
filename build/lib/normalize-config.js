const R = require('ramda');

const wrapInArray = v => [v];
const ensureArray = R.ifElse(Array.isArray, R.identity, wrapInArray);

const normalize = R.over(R.lensProp('services'), R.pipe(R.toPairs, R.map(R.over(R.lensIndex(1), R.ifElse(R.compose(R.isNil, R.prop('image')), R.identity, R.over(R.lensProp('image'), R.ifElse(R.is(String), R.identity, R.pipe(ensureArray, R.map(R.over(R.lensProp('tags'), ensureArray)))))))), R.fromPairs));

module.exports = normalize;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWIvbm9ybWFsaXplLWNvbmZpZy5qcyJdLCJuYW1lcyI6WyJSIiwicmVxdWlyZSIsIndyYXBJbkFycmF5IiwidiIsImVuc3VyZUFycmF5IiwiaWZFbHNlIiwiQXJyYXkiLCJpc0FycmF5IiwiaWRlbnRpdHkiLCJub3JtYWxpemUiLCJvdmVyIiwibGVuc1Byb3AiLCJwaXBlIiwidG9QYWlycyIsIm1hcCIsImxlbnNJbmRleCIsImNvbXBvc2UiLCJpc05pbCIsInByb3AiLCJpcyIsIlN0cmluZyIsImZyb21QYWlycyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUlDLFFBQVEsT0FBUixDQUFWOztBQUVBLE1BQU1DLGNBQWVDLENBQUQsSUFBTyxDQUFDQSxDQUFELENBQTNCO0FBQ0EsTUFBTUMsY0FBY0osRUFBRUssTUFBRixDQUFTQyxNQUFNQyxPQUFmLEVBQXdCUCxFQUFFUSxRQUExQixFQUFvQ04sV0FBcEMsQ0FBcEI7O0FBRUEsTUFBTU8sWUFBWVQsRUFBRVUsSUFBRixDQUNoQlYsRUFBRVcsUUFBRixDQUFXLFVBQVgsQ0FEZ0IsRUFFaEJYLEVBQUVZLElBQUYsQ0FDRVosRUFBRWEsT0FESixFQUVFYixFQUFFYyxHQUFGLENBQ0VkLEVBQUVVLElBQUYsQ0FDRVYsRUFBRWUsU0FBRixDQUFZLENBQVosQ0FERixFQUVFZixFQUFFSyxNQUFGLENBQ0VMLEVBQUVnQixPQUFGLENBQVVoQixFQUFFaUIsS0FBWixFQUFtQmpCLEVBQUVrQixJQUFGLENBQU8sT0FBUCxDQUFuQixDQURGLEVBRUVsQixFQUFFUSxRQUZKLEVBR0VSLEVBQUVVLElBQUYsQ0FBT1YsRUFBRVcsUUFBRixDQUFXLE9BQVgsQ0FBUCxFQUE0QlgsRUFBRUssTUFBRixDQUMxQkwsRUFBRW1CLEVBQUYsQ0FBS0MsTUFBTCxDQUQwQixFQUUxQnBCLEVBQUVRLFFBRndCLEVBRzFCUixFQUFFWSxJQUFGLENBQ0VSLFdBREYsRUFFRUosRUFBRWMsR0FBRixDQUFNZCxFQUFFVSxJQUFGLENBQU9WLEVBQUVXLFFBQUYsQ0FBVyxNQUFYLENBQVAsRUFBMkJQLFdBQTNCLENBQU4sQ0FGRixDQUgwQixDQUE1QixDQUhGLENBRkYsQ0FERixDQUZGLEVBbUJFSixFQUFFcUIsU0FuQkosQ0FGZ0IsQ0FBbEI7O0FBeUJBQyxPQUFPQyxPQUFQLEdBQWlCZCxTQUFqQiIsImZpbGUiOiJub3JtYWxpemUtY29uZmlnLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUiA9IHJlcXVpcmUoJ3JhbWRhJylcblxuY29uc3Qgd3JhcEluQXJyYXkgPSAodikgPT4gW3ZdXG5jb25zdCBlbnN1cmVBcnJheSA9IFIuaWZFbHNlKEFycmF5LmlzQXJyYXksIFIuaWRlbnRpdHksIHdyYXBJbkFycmF5KVxuXG5jb25zdCBub3JtYWxpemUgPSBSLm92ZXIoXG4gIFIubGVuc1Byb3AoJ3NlcnZpY2VzJyksXG4gIFIucGlwZShcbiAgICBSLnRvUGFpcnMsXG4gICAgUi5tYXAoXG4gICAgICBSLm92ZXIoXG4gICAgICAgIFIubGVuc0luZGV4KDEpLFxuICAgICAgICBSLmlmRWxzZShcbiAgICAgICAgICBSLmNvbXBvc2UoUi5pc05pbCwgUi5wcm9wKCdpbWFnZScpKSxcbiAgICAgICAgICBSLmlkZW50aXR5LFxuICAgICAgICAgIFIub3ZlcihSLmxlbnNQcm9wKCdpbWFnZScpLCBSLmlmRWxzZShcbiAgICAgICAgICAgIFIuaXMoU3RyaW5nKSxcbiAgICAgICAgICAgIFIuaWRlbnRpdHksXG4gICAgICAgICAgICBSLnBpcGUoXG4gICAgICAgICAgICAgIGVuc3VyZUFycmF5LFxuICAgICAgICAgICAgICBSLm1hcChSLm92ZXIoUi5sZW5zUHJvcCgndGFncycpLCBlbnN1cmVBcnJheSkpXG4gICAgICAgICAgICApXG4gICAgICAgICAgKSlcbiAgICAgICAgKVxuICAgICAgKVxuICAgICksXG4gICAgUi5mcm9tUGFpcnNcbiAgKVxuKVxuXG5tb2R1bGUuZXhwb3J0cyA9IG5vcm1hbGl6ZVxuIl19